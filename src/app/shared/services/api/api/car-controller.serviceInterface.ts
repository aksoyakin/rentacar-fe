/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CarRequest } from '../model/models';
import { CarResponse } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateCarRequestParams {
    carRequest: CarRequest;
}

export interface DeleteCarByIdRequestParams {
    id: number;
}

export interface FindCarsByMileageCounterRequestParams {
    mileageCounter: number;
}

export interface FindCarsByPlateRequestParams {
    plate: string;
}

export interface FindCarsByPriceRequestParams {
    price: number;
}

export interface FindCarsByYearRequestParams {
    year: number;
}

export interface GetCarByIdRequestParams {
    id: number;
}

export interface GetCarsByFuelTypeIdRequestParams {
    fuelTypeId: number;
}

export interface GetCarsByTransmissionTypeIdRequestParams {
    transmissionTypeId: number;
}

export interface UpdateCarByIdRequestParams {
    id: number;
    carRequest: CarRequest;
}


export interface CarControllerServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
* @param requestParameters
     */
    createCar(requestParameters: CreateCarRequestParams, extraHttpRequestParams?: any): Observable<CarResponse>;

    /**
     * 
     * 
* @param requestParameters
     */
    deleteCarById(requestParameters: DeleteCarByIdRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
* @param requestParameters
     */
    findCarsByMileageCounter(requestParameters: FindCarsByMileageCounterRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    findCarsByPlate(requestParameters: FindCarsByPlateRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    findCarsByPrice(requestParameters: FindCarsByPriceRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    findCarsByYear(requestParameters: FindCarsByYearRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
*/
    getAllCars(extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    getCarById(requestParameters: GetCarByIdRequestParams, extraHttpRequestParams?: any): Observable<CarResponse>;

    /**
     * 
     * 
* @param requestParameters
     */
    getCarsByFuelTypeId(requestParameters: GetCarsByFuelTypeIdRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    getCarsByTransmissionTypeId(requestParameters: GetCarsByTransmissionTypeIdRequestParams, extraHttpRequestParams?: any): Observable<Array<CarResponse>>;

    /**
     * 
     * 
* @param requestParameters
     */
    updateCarById(requestParameters: UpdateCarByIdRequestParams, extraHttpRequestParams?: any): Observable<CarResponse>;

}
